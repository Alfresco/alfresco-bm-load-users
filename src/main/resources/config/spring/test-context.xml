<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!-- Import any application contexts for test runs -->
    <import resource="classpath:config/spring/test-common-context.xml"/>

    <!--                 -->
    <!-- Reporting       -->
    <!--                 -->
    <!-- The CompletionEstimator looking at the process count results -->
    <bean id="completionEstimator" class="org.alfresco.bm.driver.test.EventCountCompletionEstimator">
        <constructor-arg name="eventService" ref="eventService"/>
        <constructor-arg name="resultService" ref="resultService"/>
        <constructor-arg name="eventName" value="createUser"/>
        <constructor-arg name="eventCount" value="${user.numberOfUsers}"/>
    </bean>

    <!--                 -->
    <!-- Support Service -->
    <!--                 -->
    <bean id="userDataService" class="org.alfresco.bm.user.UserDataServiceImpl">
        <constructor-arg name="db" ref="testMongoDB"/>
        <constructor-arg name="collection" value="${users.collectionName}"/>
    </bean>

    <bean id="authenticationDetailsProvider" class="org.alfresco.bm.http.UserDataAutheticationDetailsProvider">
        <constructor-arg name="userDataService" ref="userDataService"/>
        <constructor-arg name="adminUserName" value="${alfresco.adminUser}"/>
        <constructor-arg name="adminPassword" value="${alfresco.adminPwd}"/>
    </bean>

    <!--                 -->
    <!-- EventProcessors -->
    <!--                 -->

    <!-- Start by scheduling user-creation -->
    <bean id="event.start" class="org.alfresco.bm.user.PrepareUsers" parent="event.base">
        <constructor-arg name="userDataService" ref="userDataService"/>
        <constructor-arg name="numberOfUsers" value="${user.numberOfUsers}"/>
        <property name="usersPerDomain" value="${user.usersPerDomain}"/>
        <property name="domainPattern" value="${user.domainPattern}"/>
        <property name="emailDomainPattern" value="${user.emailDomainPattern}"/>
        <property name="firstNamePattern" value="${user.firstNamePattern}"/>
        <property name="lastNamePattern" value="${user.lastNamePattern}"/>
        <property name="emailAddressPattern" value="${user.emailAddressPattern}"/>
        <property name="usernamePattern" value="${user.usernamePattern}"/>
        <property name="passwordPattern" value="${user.passwordPattern}"/>
        <property name="assumeCreated" value="${user.assumeCreated}"/>
        <property name="chart" value="false"/>
    </bean>
    <bean id="producer.usersPrepared" class="org.alfresco.bm.driver.event.producer.RedirectEventProducer" parent="producer.base">
        <constructor-arg name="newEventName" value="createUsers"/>
    </bean>
    <bean id="event.createUsers" class="org.alfresco.bm.user.CreateUsers" parent="event.base">
        <constructor-arg name="userDataService" ref="userDataService"/>
        <constructor-arg name="numberOfUsers" value="${user.numberOfUsers}"/>
        <property name="creationDelay" value="${user.signupDelay}"/>
        <property name="chart" value="false"/>
    </bean>

    <bean id="event.createUser" class="org.alfresco.bm.user.CreateUsersWithRestV1API" parent="event.base">
        <property name="userDataService" ref="userDataService"/>
        <property name="userGroups" value="${user.groups}"/>
        <!-- When user already exists, event is considered as successful by setting this property -->
        <property name="ignoreExistingUsers" value="true"/>
        <property name="baseUrl" value="${alfresco.url}"/>
        <property name="alfrescoAdminUsername" value="${alfresco.adminUser}"/>
        <property name="alfrescoAdminPassword" value="${alfresco.adminPwd}"/>
    </bean>

    <bean id="producer.usersCreated" class="org.alfresco.bm.driver.event.producer.RedirectEventProducer" parent="producer.base">
        <constructor-arg name="newEventName" value="checkUsers"/>
    </bean>

    <!-- Check that there are users available -->
    <bean id="event.checkUsers" class="org.alfresco.bm.user.CheckUserCountEventProcessor" parent="event.base">
        <constructor-arg name="userDataService" ref="userDataService"/>
        <constructor-arg name="userCount" value="${user.numberOfUsers}"/>
        <property name="eventNameUsersReady" value="usersChecked"/>
        <property name="chart" value="false"/>
        <property name="eventNameSelf" value="checkUsers"/>
        <property name="delayRescheduleSelf" value="${user.rescheduleDelay}"/>
        <property name="rescheduleSelf" value="${user.rescheduleSelf}"/>
    </bean>
    <bean id="producer.usersChecked" class="org.alfresco.bm.driver.event.producer.TerminateEventProducer" parent="producer.base"/>

</beans>